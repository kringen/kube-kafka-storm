apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.storm.nimbus.name }}
  labels:
    app: {{ .Values.storm.nimbus.name }}
spec:
  ports:
{{- with .Values.storm.nimbus.service.ports }}
{{ toYaml . | indent 2 }}
{{- end }}
  clusterIP: None # Headless Service
  selector:
    app: {{ .Values.storm.nimbus.name }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.storm.nimbus.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.storm.nimbus.name }} # has to match .spec.template.metadata.labels
  serviceName: {{ .Values.storm.nimbus.name }}
  replicas: {{ .Values.storm.nimbus.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.storm.nimbus.name }} # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: zookeeper-check
        image: busybox
        command: ["/bin/sh","-c", "until nc -zv zookeeper 2181; do echo waiting for Zookeeper; sleep 5; done;"]
      containers:
      - name: {{ .Values.storm.nimbus.container.name }}
        image: {{ printf "%s/%s:%s" .Values.storm.nimbus.container.imageRepository .Values.storm.nimbus.container.image .Values.storm.nimbus.container.imageVersion }}
        env:
{{- with .Values.storm.nimbus.container.env }}
{{ toYaml . | indent 8 }}
{{- end }}
        command: 
        - storm
        - nimbus
        - -c
        - storm.local.hostname=$(MY_POD_NAME).nimbus
        ports:
{{- with .Values.storm.nimbus.container.ports }}
{{ toYaml . | indent 8 }}
{{- end }}
        resources:
{{- with .Values.storm.nimbus.container.resources }}
{{ toYaml . | indent 10 }}
{{- end }}        
        readinessProbe:
          exec:
            command:
            {{  range .Values.storm.nimbus.container.readinessProbe.command }}
            - {{ . }}
            {{ end }}
          initialDelaySeconds: {{ .Values.storm.nimbus.container.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.storm.nimbus.container.readinessProbe.timeoutSeconds }}
        livenessProbe:
          exec:
            command:
            {{  range .Values.storm.nimbus.container.livenessProbe.command }}
            - {{ . }}
            {{ end }}
          initialDelaySeconds: {{ .Values.storm.nimbus.container.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.storm.nimbus.container.livenessProbe.timeoutSeconds }}
        volumeMounts:
        - name: storm-configmap
          mountPath: {{ .Values.storm.nimbus.volumes.config.path }}
        - name: storm-logging-config
          mountPath: {{ .Values.storm.nimbus.volumes.log4j2conf.path }}
        - name: data
          mountPath: {{ .Values.storm.nimbus.volumes.localdatadir.path }}
        - name: data-log
          mountPath: {{ .Values.storm.nimbus.volumes.logdir.path }}
        - name: storm-metrics
          mountPath: {{ .Values.storm.nimbus.volumes.metricsdb.path }}
      volumes:
      - name: storm-configmap
        configMap:
          name: storm-config
      - name: storm-logging-config
        configMap:
          name: storm-logging
      - name: data
      {{- if .Values.storm.nimbus.volumes.localdatadir.persisted }}
        persistentVolumeClaim:
          claimName: {{ .Values.storm.nimbus.volumes.localdatadir.persistentVolumeClaim.claimName }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: data-log
      {{- if .Values.storm.nimbus.volumes.logdir.persisted }}
        persistentVolumeClaim:
          claimName: {{ .Values.storm.nimbus.volumes.logdir.persistentVolumeClaim.claimName }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: storm-metrics
      {{- if .Values.storm.nimbus.volumes.metricsdb.persisted }}
        persistentVolumeClaim:
          claimName: {{ .Values.storm.nimbus.volumes.metricsdb.persistentVolumeClaim.claimName }}
      {{- else }}
        emptyDir: {}
      {{- end }}
